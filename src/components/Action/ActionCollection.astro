---
import {
    type ReferenceDataEntry,
    getCollection,
    getEntries,
} from "astro:content";
import ActionBadge from "./ActionBadge.astro";
import ActionTags from "./ActionTags.astro";

interface Props {
    entries?: ReferenceDataEntry<"actions">[];
    programmes?: string[];
    tags?: string[];
    maxItems?: number;
}

const {
    entries = null,
    programmes = null,
    tags = null,
    maxItems = null,
} = Astro.props;

const collection = entries
    ? await getEntries(entries)
    : await getCollection("actions", ({ data}) => {
        if (data.publie === false) {
            return false;
        }
        if (programmes && programmes.length > 0) {
            return data.programmes.some((item) => programmes.includes(item.id));
        }
        if (tags && tags.length > 0) {
            return data.tags.some((item) => tags.includes(item));
        }
        return true;
    });

const actions = maxItems ? collection.slice(0, maxItems) : collection;
---

{
    actions.length === 0 ? (
        <p class="text-gray-800">Aucune Action en cours pour le moment.</p>
    ) : (
        <div class="flex flex-col gap-4">
            {actions.map((item) => (
                <div class="card bg-white shadow-sm">
                    <div class="card-body gap-2">
                        <div class="card-header flex flex-col md:flex-row md:items-center gap-2">
                            <h4 class="card-title flex-1">
                                <a href={`/actions/${item.data.slug}`}>
                                    {item.data.titre}
                                </a>
                            </h4>

                            <div class="order-first md:order-last">
                                <ActionBadge etat={item.data.etat} />
                            </div>
                        </div>

                        <p>{item.data.description}</p>

                        {item.data.tags && item.data.tags.length > 0 && (
                            <ActionTags
                                class="card-footer mt-2"
                                tags={item.data.tags}
                            />
                        )}
                    </div>
                </div>
            ))}
        </div>
    )
}

<style>
    .card-title a:hover {
        text-decoration: underline;
        color: var(--color-primary);
    }
</style>
