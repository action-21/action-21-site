---
import Layout from "../../../layouts/Layout.astro";
import { getCollection, getEntries, render } from "astro:content";
import {
    ActionCollection,
    ActionBadge,
    ActionTags,
} from "../../../components/Action";

export async function getStaticPaths() {
    const entries = await getCollection("actions");
    return entries.map((entry) => ({
        params: { slug: entry.data.slug },
        props: { entry },
    }));
}

const { entry } = Astro.props;
const data = entry.data;
const { Content } = await render(entry);
const programmes = await getEntries(entry.data.programmes);
const actions = entry.data.actions ? await getEntries(entry.data.actions) : [];
---

<Layout title={data.titre} description={data.description}>
    <section class="section">
        <div class="container">
            <article class="card bg-white">
                <header class="card-body gap-2">
                    <ul class="breadcrumb">
                        {
                            programmes.map((item) => (
                                <li>
                                    <a href={`/programmes/${item.data.slug}`}>
                                        {item.data.titre}
                                    </a>
                                </li>
                            ))
                        }
                    </ul>

                    <div
                        class="flex flex-col md:flex-row md:items-center gap-2"
                    >
                        <h1 class="h1 flex-1">{data.titre}</h1>

                        <ActionBadge etat={data.etat} />
                    </div>

                    <p class="my-2">{data.description}</p>

                    {
                        data.tags && data.tags.length > 0 && (
                            <ActionTags
                                class="justify-start"
                                tags={data.tags}
                            />
                        )
                    }
                </header>

                <div class="card-body markdown-body">
                    <Content />
                </div>
            </article>
        </div>
    </section>

    {
        actions.length > 0 && (
            <section class="section">
                <div class="container">
                    <header class="header">
                        <h2 class="h2">Actions associ√©es</h2>
                    </header>

                    <ActionCollection entries={actions} />
                </div>
            </section>
        )
    }
</Layout>

<style>
    article {
        header {
            .breadcrumb {
                text-transform: uppercase;
                font-weight: 600;

                a:hover {
                    text-decoration: underline;
                    color: var(--color-primary);
                }
            }
        }
    }
</style>
